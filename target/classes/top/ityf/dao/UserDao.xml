<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.ityf.dao.UserDao">
    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="top.ityf.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id"/>
        <!-- 非主键字段的对应 -->
        <result property="userName" column="username"/>
        <result property="userAddress" column="address"/>
        <result property="userSex" column="sex"/>
        <result property="userBirthday" column="birthday"/>
    </resultMap>


    <select id="findAll" resultMap="userMap">
        <!--select id as userId,username,address as userAddress,sex as userSex,birthday as userBirthday from user;-->
        select * from user ;
    </select>

    <insert id="saveUser" parameterType="top.ityf.domain.User">
        <!-- 配置插入操作后，获取插入数据的id -->
        <!-- keyProperty必须和pojo的属性名一一对应 -->
        <selectKey keyProperty="userId" keyColumn="id" order="AFTER" resultType="int">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday) values(#{userName},#{userAddress},#{userSex},#{userBirthday})
    </insert>

    <update id="updateUser" parameterType="top.ityf.domain.User">
        update user set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday} where id=#{userId}
    </update>

    <update id="deleteUser" parameterType="int">
        delete from user where id=#{id}
    </update>

    <select id="findById" parameterType="Integer" resultType="top.ityf.domain.User">
        select * from user where id=#{id}
    </select>

    <select id="findByName" resultType="top.ityf.domain.User" parameterType="string">
        select * from user where username like #{name}
    </select>

    <select id="findTotal" resultType="Int">
        SELECT count(id) FROM `user`;
    </select>
</mapper>